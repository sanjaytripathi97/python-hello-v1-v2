#use oc new-app quay.io/rhn_xxxx_satripat/python-hello:v1  
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: python-v2
    app.kubernetes.io/component: python-v2
    app.kubernetes.io/instance: python-v2
  name: python-v2
  namespace: python-mesh
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      deployment: python-v2
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: null
      labels:
        deployment: python-v2
    spec:
      containers:
      - image: quay.io/rhn_xxxx_satripat/python-hello:v1
        imagePullPolicy: IfNotPresent
        name: python-v2
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 8000
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
#oc expose deploy <name>  to get svc
oc get svc python-v2 -o yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: python-v2
    app.kubernetes.io/component: python-v2
    app.kubernetes.io/instance: python-v2
  name: python-v2
  namespace: python-mesh
spec:
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: 8000-tcp
    port: 8000
    protocol: TCP
    targetPort: 8000
  - name: 8080-tcp
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    deployment: python-v2
  sessionAffinity: None
  type: ClusterIP
